# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle Admin

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    # job 이름을 정해줌.
    name: Test Admin, build
    # 리눅스 환경? 다른 플랫폼이 올 수 있다?
    runs-on: ubuntu-latest
    
    # step은 shell script를 실행할 수 도 있고,
    # 누군가 만들어 놓은 Action을 사용할 수도 있다.
    steps:
    # 누군가 만들어 놓은 Action을 사용할 때는 uses 키워드를 써야한다.
    - uses: actions/checkout@v3
   
   # 해당 환경을 JDK11 위에서 실행하겠다고 명시해줌.
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      # with라는 키워드로 Action에 값을 전달할 수 있다.
      with:
        java-version: '11'
        distribution: 'temurin'
    
      # permisions를 사용하기 위한 세팅이라고함..
   - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
      run: ./gradlew build
      
    ## 웹 이미지 빌드 및 도커허브에 push
#     - name: web docker build and push
#       run: |
#         docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
#         docker build -t ${{ secrets.DOCKER_REPO }}/ci-test ./
#         docker push ${{ secrets.DOCKER_REPO }}/ci-test
        # 시간을 설정하는 ?
    - name: Get timestamp
      uses: gerred/actions/current-time@master
      # 해당 step을 대표하는 id로 설정할 수 있다?
      id: current-time

        # 문자열을 정규식으로 바꿉니다.
    - name: Run string replace
      uses: frabert/replace-string-action@master
      id: format-time
      with:
        # 필수 일치시킬 정규식입니다.
        pattern: '[:\.]+'
        # 필수 입력 문자열입니다.
        string: "${{ steps.current-time.outputs.time }}"
        # 필수 대체에 사용할 문자열입니다.
        replace-with: '-'
        # 일치시킬 때 사용할 플래그
        flags: 'g'

#     - name: Beanstalk Deploy
#       uses: einaregilsson/beanstalk-deploy@v20
#       with:
#         aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         application_name: cicd
#         environment_name: Cicd-env
#         version_label: "github-action--${{ steps.format-time.outputs.replaced }}"
#         region: ap-northeast-2
#         deployment_package: Dockerrun.aws.json  
